{"version":3,"sources":["api-services/fetch-api.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["BASE_URL","API_KEY","fetchItems","searchItem","page","fetch","Searchbar","state","handleFormChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","this","className","type","onClick","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","id","src","tag","alt","ImageGallery","searchResult","onSelect","map","item","itemId","uuidv4","webformatURL","Button","onBtnClick","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","App","status","selectedImage","selectedImageTag","handleFormSubmit","searchQuery","handleSearchResult","querryResult","length","handleSelectItem","largeImageURL","tags","handleModalClose","handleBtnClick","prevState","scrollDown","scrollTo","top","document","documentElement","scrollHeight","behavior","prevProps","then","response","ok","json","Promise","reject","Error","data","hits","success","catch","position","color","height","width","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.61c6a0a4.chunk.js","sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '22569115-02a432c6c1c62bbb3a59801b7';\nconst PER_PAGE = 12;\n\nexport const fetchItems = (searchItem, page = 1) => {\n  return fetch(\n    `${BASE_URL}?q=${searchItem}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${PER_PAGE}`,\n  );\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport toast from 'react-hot-toast';\n\nexport class Searchbar extends Component {\n  state = {\n    searchItem: '',\n  };\n\n  // Считываю результат поиска\n  handleFormChange = e => {\n    this.setState({ searchItem: '' });\n    this.setState({ searchItem: e.currentTarget.value.toLowerCase() });\n  };\n\n  // Передаю результат поиска\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.searchItem.trim() === '') {\n      toast.error('empty field');\n      return;\n    }\n    this.props.onSubmit(this.state.searchItem);\n    this.setState({ searchItem: '' });\n  };\n\n  render() {\n    const { searchItem } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button\n            type=\"submit\"\n            className=\"SearchForm-button\"\n            onClick={this.handleSubmit}\n          >\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            value={searchItem}\n            onChange={this.handleFormChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport const ImageGalleryItem = ({ id, src, tag, onClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        id={id}\n        src={src}\n        alt={tag}\n        onClick={onClick}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number,\n  onClick: PropTypes.func,\n  src: PropTypes.string,\n  tag: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\n\nexport const ImageGallery = ({ searchResult, onSelect }) => {\n  return (\n    <section>\n      <ul className=\"ImageGallery\">\n        {searchResult.map(item => {\n          const itemId = uuidv4();\n\n          return (\n            <ImageGalleryItem\n              key={itemId}\n              id={item.id}\n              src={item.webformatURL}\n              tag={item.tag}\n              onClick={() => onSelect(item)}\n            />\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nImageGallery.propTypes = {\n  onSelect: PropTypes.func,\n  searchResult: PropTypes.arrayOf(PropTypes.object),\n};\n","import PropTypes from 'prop-types';\n\nexport const Button = ({ onBtnClick }) => {\n  return (\n    <div className=\"btn_wrapper\">\n      <button type=\"button\" className=\"Button\" onClick={onBtnClick}>\n        Load more\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nexport class Modal extends Component {\n  // Вешаю слушателя\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  // Снимаю слуашателя\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  // Метод закрытия модального окна по кнопке Esc\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  // Метод закрытия модального окна по бекдропу\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.src} alt={this.props.tag} />\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  src: PropTypes.string,\n  tag: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport { fetchItems } from '../api-services/fetch-api';\nimport { Searchbar } from './Searchbar';\nimport { ImageGallery } from './ImageGallery';\nimport { Button } from './Button/Button';\nimport { Modal } from './Modal';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// Уведомления Тостер\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport class App extends Component {\n  state = {\n    status: 'idle',\n    page: 1,\n    searchItem: '',\n    searchResult: [],\n    error: null,\n\n    selectedImage: null,\n    selectedImageTag: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchItem, page } = this.state;\n    // Фетч по поиску\n    if (prevState.searchItem !== searchItem) {\n      this.setState({ status: 'pending', page: 1 });\n\n      fetchItems(searchItem, page)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          toast.error('something went wrong');\n          return Promise.reject(\n            new Error(`search '${searchItem}' returned with error`),\n          );\n        })\n        .then(data => {\n          const { hits } = data;\n\n          if (hits.length === 0) {\n            toast.error('no images');\n            this.setState({ searchResult: [], status: 'idle' });\n          } else if (hits.length > 0) {\n            toast.success('images found');\n            this.setState({ searchResult: hits });\n          }\n\n          return this.setState({ status: 'resolved' });\n        })\n        .catch(error => this.setState({ error: error, status: 'rejected' }));\n    }\n    // Фетч по нажатию Load more\n    if (prevState.page !== page && page > 1) {\n      this.setState({ status: 'pending' });\n\n      fetchItems(searchItem, page)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          toast.error('something went wrong');\n          return Promise.reject(\n            new Error(`search '${searchItem}' returned with error`),\n          );\n        })\n        .then(data => {\n          const { hits } = data;\n\n          if (hits.length === 0) {\n            toast.error('no more images found');\n            this.setState({\n              searchResult: [],\n              status: 'idle',\n              page: 1,\n            });\n\n            return;\n          }\n          toast.success('more images found');\n          this.setState(prevState => ({\n            searchResult: [...prevState.searchResult, ...hits],\n          }));\n          this.setState({ status: 'resolved' });\n          this.scrollDown();\n\n          return;\n        })\n        .catch(error => this.setState({ error: error, status: 'rejected' }));\n    }\n  }\n  // Передаю в стейт текст поиска\n  handleFormSubmit = searchQuery =>\n    this.setState({ searchItem: searchQuery, page: 1 });\n\n  // Передаю в стейт результат поиска\n  handleSearchResult = querryResult => {\n    if (querryResult.length === 0) {\n      this.setState({ searchResult: null });\n    } else {\n      this.setState({ searchResult: querryResult });\n    }\n  };\n\n  // Передаю в стейт информацию для модального окна\n  handleSelectItem = item =>\n    this.setState({\n      selectedImage: item.largeImageURL,\n      selectedImageTag: item.tags,\n    });\n\n  // Метод закрытия модального окна\n  handleModalClose = () => {\n    this.setState({ selectedImage: null });\n  };\n\n  // Загружаю больше изображений\n  handleBtnClick = () => {\n    if (this.state.searchResult.length !== 0) {\n      this.setState(prevState => ({ page: prevState.page + 1 }));\n    }\n    return;\n  };\n\n  // Функция скролла\n  scrollDown = () => {\n    return window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  render() {\n    const { status, searchResult, error, selectedImage, selectedImageTag } =\n      this.state;\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <Toaster position=\"top-right\" />\n        {status === 'pending' && (\n          <div className=\"loader_wrapper\">\n            <Loader\n              type=\"TailSpin\"\n              color=\"#3f51b5\"\n              height={60}\n              width={60}\n              className=\"Loader\"\n            />\n          </div>\n        )}\n        {status === 'rejected' && <h2 className=\"error\">{error.message}</h2>}\n        {status === 'resolved' && (\n          <div>\n            <ImageGallery\n              searchResult={searchResult}\n              onSelect={this.handleSelectItem}\n            />\n            {searchResult.length >= 0 && status !== 'idle' && (\n              <Button onBtnClick={this.handleBtnClick} />\n            )}\n            {selectedImage && (\n              <Modal\n                src={selectedImage}\n                tag={selectedImageTag}\n                onClose={this.handleModalClose}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
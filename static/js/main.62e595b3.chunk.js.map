{"version":3,"sources":["api-services/fetch-api.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","API_KEY","fetchItems","searchItem","a","page","get","response","Searchbar","state","handleFormChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","this","className","type","onClick","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","id","item","webformatURL","tag","src","alt","ImageGallery","searchResult","onSelect","map","itemId","uuidv4","Button","onBtnClick","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","App","status","selectedImage","selectedImageTag","handleFormSubmit","searchQuery","handleSearchResult","querryResult","length","handleSelectItem","largeImageURL","tags","handleModalClose","handleBtnClick","prevState","scrollDown","scrollTo","top","document","documentElement","scrollHeight","behavior","_","hits","data","success","showBtn","position","color","height","width","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.62e595b3.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\nconst API_KEY = '22569115-02a432c6c1c62bbb3a59801b7';\nconst PER_PAGE = 12;\n\nexport const fetchItems = async (searchItem, page = 1) => {\n  const response = await axios.get(\n    `?q=${searchItem}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${PER_PAGE}`,\n  );\n  return response;\n};\n\n// Через обычный фетч, без axios\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const API_KEY = '22569115-02a432c6c1c62bbb3a59801b7';\n// const PER_PAGE = 12;\n\n// export const fetchItems = (searchItem, page = 1) => {\n//   return fetch(\n//     `${BASE_URL}?q=${searchItem}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${PER_PAGE}`,\n//   );\n// };\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport toast from 'react-hot-toast';\n\nexport class Searchbar extends Component {\n  state = {\n    searchItem: '',\n  };\n\n  // Считываю результат поиска\n  handleFormChange = e => {\n    this.setState({ searchItem: '' });\n    this.setState({ searchItem: e.currentTarget.value.toLowerCase() });\n  };\n\n  // Передаю результат поиска\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.searchItem.trim() === '') {\n      toast.error('empty field');\n      return;\n    }\n    this.props.onSubmit(this.state.searchItem);\n    this.setState({ searchItem: '' });\n  };\n\n  render() {\n    const { searchItem } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button\n            type=\"submit\"\n            className=\"SearchForm-button\"\n            onClick={this.handleSubmit}\n          >\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            value={searchItem}\n            onChange={this.handleFormChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport const ImageGalleryItem = ({ id, item, onClick }) => {\n  const { webformatURL, tag } = item;\n  // console.log(item);\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        id={id}\n        src={webformatURL}\n        alt={tag}\n        onClick={onClick}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.string,\n  item: PropTypes.objectOf(PropTypes.any),\n  onClick: PropTypes.func,\n  src: PropTypes.string,\n  tag: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\n\nexport const ImageGallery = ({ searchResult, onSelect }) => {\n  return (\n    <section>\n      <ul className=\"ImageGallery\">\n        {searchResult.map(item => {\n          const itemId = uuidv4();\n\n          return (\n            <ImageGalleryItem\n              key={itemId}\n              item={item}\n              onClick={() => onSelect(item)}\n            />\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nImageGallery.propTypes = {\n  onSelect: PropTypes.func,\n  searchResult: PropTypes.arrayOf(PropTypes.object),\n};\n","import PropTypes from 'prop-types';\n\nexport const Button = ({ onBtnClick }) => {\n  return (\n    <div className=\"btn_wrapper\">\n      <button type=\"button\" className=\"Button\" onClick={onBtnClick}>\n        Load more\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nexport class Modal extends Component {\n  // Вешаю слушателя\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  // Снимаю слуашателя\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  // Метод закрытия модального окна по кнопке Esc\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  // Метод закрытия модального окна по бекдропу\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.src} alt={this.props.tag} />\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  src: PropTypes.string,\n  tag: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport { fetchItems } from '../api-services/fetch-api';\nimport { Searchbar } from './Searchbar';\nimport { ImageGallery } from './ImageGallery';\nimport { Button } from './Button/Button';\nimport { Modal } from './Modal';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// Уведомления Тостер\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport class App extends Component {\n  state = {\n    status: 'idle',\n    page: 1,\n    searchItem: '',\n    searchResult: [],\n    error: null,\n\n    selectedImage: null,\n    selectedImageTag: null,\n  };\n\n  async componentDidUpdate(_, prevState) {\n    const { searchItem, page } = this.state;\n    // Фетч по поиску\n    if (prevState.searchItem !== searchItem) {\n      this.setState({ status: 'pending', page: 1 });\n\n      try {\n        const response = await fetchItems(searchItem, page);\n        const { hits } = response.data;\n\n        if (hits.length === 0) {\n          toast.error('no images');\n          this.setState({ searchResult: [], status: 'idle' });\n        } else if (hits.length > 0) {\n          toast.success('images found');\n          this.setState({ searchResult: hits });\n        }\n\n        return this.setState({ status: 'resolved' });\n      } catch (error) {\n        toast.error('something went wrong');\n        return this.setState({ error: error, status: 'rejected' });\n      }\n    }\n\n    // Фетч по нажатию Load more\n    if (prevState.page !== page && page > 1) {\n      this.setState({ status: 'pending' });\n\n      try {\n        const response = await fetchItems(searchItem, page);\n        const { hits } = response.data;\n\n        if (hits.length === 0) {\n          toast.error('no more images found');\n          this.setState({\n            searchResult: [],\n            status: 'idle',\n            page: 1,\n          });\n\n          return;\n        }\n        toast.success('more images found');\n        this.setState(prevState => ({\n          searchResult: [...prevState.searchResult, ...hits],\n        }));\n        this.setState({ status: 'resolved' });\n        this.scrollDown();\n\n        return;\n      } catch (error) {\n        return error => this.setState({ error: error, status: 'rejected' });\n      }\n    }\n  }\n  // Передаю в стейт текст поиска\n  handleFormSubmit = searchQuery =>\n    this.setState({ searchItem: searchQuery, page: 1 });\n\n  // Передаю в стейт результат поиска\n  handleSearchResult = querryResult => {\n    if (querryResult.length === 0) {\n      this.setState({ searchResult: null });\n    } else {\n      this.setState({ searchResult: querryResult });\n    }\n  };\n\n  // Передаю в стейт информацию для модального окна\n  handleSelectItem = item =>\n    this.setState({\n      selectedImage: item.largeImageURL,\n      selectedImageTag: item.tags,\n    });\n\n  // Метод закрытия модального окна\n  handleModalClose = () => {\n    this.setState({ selectedImage: null });\n  };\n\n  // Загружаю больше изображений\n  handleBtnClick = () => {\n    if (this.state.searchResult.length !== 0) {\n      this.setState(prevState => ({ page: prevState.page + 1 }));\n    }\n    return;\n  };\n\n  // Функция скролла\n  scrollDown = () => {\n    return window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  render() {\n    const { status, searchResult, error, selectedImage, selectedImageTag } =\n      this.state;\n    const showBtn = searchResult.length > 0 && status !== 'idle';\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <Toaster position=\"top-right\" />\n\n        {status === 'pending' && (\n          <div className=\"loader_wrapper\">\n            <Loader\n              type=\"TailSpin\"\n              color=\"#3f51b5\"\n              height={60}\n              width={60}\n              className=\"Loader\"\n            />\n          </div>\n        )}\n\n        {status === 'rejected' && <h2 className=\"error\">{error.message}</h2>}\n\n        {status === 'resolved' && (\n          <div>\n            <ImageGallery\n              searchResult={searchResult}\n              onSelect={this.handleSelectItem}\n            />\n            {showBtn && <Button onBtnClick={this.handleBtnClick} />}\n\n            {selectedImage && (\n              <Modal\n                src={selectedImage}\n                tag={selectedImageTag}\n                onClose={this.handleModalClose}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n// Через обычный фетч без axios+async/await\n\n// componentDidUpdate(prevProps, prevState) {\n//     const { searchItem, page } = this.state;\n//     // Фетч по поиску\n//     if (prevState.searchItem !== searchItem) {\n//       this.setState({ status: 'pending', page: 1 });\n\n//       fetchItems(searchItem, page)\n//         .then(response => {\n//           if (response.ok) {\n//             return response.json();\n//           }\n//           toast.error('something went wrong');\n//           return Promise.reject(\n//             new Error(`search '${searchItem}' returned with error`),\n//           );\n//         })\n//         .then(data => {\n//           const { hits } = data;\n\n//           if (hits.length === 0) {\n//             toast.error('no images');\n//             this.setState({ searchResult: [], status: 'idle' });\n//           } else if (hits.length > 0) {\n//             toast.success('images found');\n//             this.setState({ searchResult: hits });\n//           }\n\n//           return this.setState({ status: 'resolved' });\n//         })\n//         .catch(error => this.setState({ error: error, status: 'rejected' }));\n//     }\n//     // Фетч по нажатию Load more\n//     if (prevState.page !== page && page > 1) {\n//       this.setState({ status: 'pending' });\n\n//       fetchItems(searchItem, page)\n//         .then(response => {\n//           if (response.ok) {\n//             return response.json();\n//           }\n//           toast.error('something went wrong');\n//           return Promise.reject(\n//             new Error(`search '${searchItem}' returned with error`),\n//           );\n//         })\n//         .then(data => {\n//           const { hits } = data;\n\n//           if (hits.length === 0) {\n//             toast.error('no more images found');\n//             this.setState({\n//               searchResult: [],\n//               status: 'idle',\n//               page: 1,\n//             });\n\n//             return;\n//           }\n//           toast.success('more images found');\n//           this.setState(prevState => ({\n//             searchResult: [...prevState.searchResult, ...hits],\n//           }));\n//           this.setState({ status: 'resolved' });\n//           this.scrollDown();\n\n//           return;\n//         })\n//         .catch(error => this.setState({ error: error, status: 'rejected' }));\n//     }\n//   }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}